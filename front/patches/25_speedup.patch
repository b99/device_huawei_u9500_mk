
project frameworks/base/
diff --git a/frameworks/base/policy/src/com/android/internal/policy/impl/WindowOrientationListener.java b/frameworks/base/policy/src/com/android/internal/policy/impl/WindowOrientationListener.java
index 6c9bea6..051a2ca 100644
--- a/frameworks/base/policy/src/com/android/internal/policy/impl/WindowOrientationListener.java
+++ b/frameworks/base/policy/src/com/android/internal/policy/impl/WindowOrientationListener.java
@@ -245,12 +245,12 @@ public boolean canDetectOrientation() {
         // the low-pass filter already suppresses most of the noise so we're really just
         // looking for quick confirmation that the last few samples are in agreement as to
         // the desired orientation.
-        private static final long PROPOSAL_SETTLE_TIME_NANOS = 40 * NANOS_PER_MS;
+        private static final long PROPOSAL_SETTLE_TIME_NANOS = 20 * NANOS_PER_MS;

         // The minimum amount of time that must have elapsed since the device last exited
         // the flat state (time since it was picked up) before the proposed rotation
         // can change.
-        private static final long PROPOSAL_MIN_TIME_SINCE_FLAT_ENDED_NANOS = 500 * NANOS_PER_MS;
+        private static final long PROPOSAL_MIN_TIME_SINCE_FLAT_ENDED_NANOS = 250 * NANOS_PER_MS;

         // The minimum amount of time that must have elapsed since the device stopped
         // swinging (time since device appeared to be in the process of being put down
         // or put away into a pocket) before the proposed rotation can change.
-        private static final long PROPOSAL_MIN_TIME_SINCE_SWING_ENDED_NANOS = 300 * NANOS_PER_MS;
+        private static final long PROPOSAL_MIN_TIME_SINCE_SWING_ENDED_NANOS = 250 * NANOS_PER_MS;

         // The minimum amount of time that must have elapsed since the device stopped
         // undergoing external acceleration before the proposed rotation can change.
         private static final long PROPOSAL_MIN_TIME_SINCE_ACCELERATION_ENDED_NANOS =
-                500 * NANOS_PER_MS;
+                450 * NANOS_PER_MS;

         // If the tilt angle remains greater than the specified angle for a minimum of
         // the specified time, then the device is deemed to be lying flat

diff --git a/frameworks/base/packages/SystemUI/res/values/dimens.xml b/frameworks/base/packages/SystemUI/res/values/dimens.xml
index 15a4771..51a0294 100644
--- a/frameworks/base/packages/SystemUI/res/values/dimens.xml
+++ b/frameworks/base/packages/SystemUI/res/values/dimens.xml
@@ -103,31 +103,31 @@
 
     <!-- Notification drawer tuning parameters (phone UI) -->
     <!-- Initial velocity of the shade when expanding on its own -->
-    <dimen name="self_expand_velocity">2000dp</dimen>
+    <dimen name="self_expand_velocity">3000dp</dimen>
     <!-- Initial velocity of the shade when collapsing on its own -->
-    <dimen name="self_collapse_velocity">2000dp</dimen>
+    <dimen name="self_collapse_velocity">2500dp</dimen>
     <!-- Minimum final velocity of gestures interpreted as expand requests -->
     <dimen name="fling_expand_min_velocity">100dp</dimen>
     <!-- Minimum final velocity of gestures interpreted as collapse requests -->
     <dimen name="fling_collapse_min_velocity">100dp</dimen>
     <!-- Cap on contribution of x dimension of gesture to overall velocity -->
-    <dimen name="fling_gesture_max_x_velocity">200dp</dimen>
+    <dimen name="fling_gesture_max_x_velocity">400dp</dimen>
     <!-- Cap on overall resulting fling speed (s^-1) -->
-    <dimen name="fling_gesture_max_output_velocity">3000dp</dimen>
+    <dimen name="fling_gesture_max_output_velocity">4000dp</dimen>
 
     <!-- Minimum distance a fling must travel (anti-jitter) -->
-    <dimen name="fling_gesture_min_dist">20dp</dimen>
+    <dimen name="fling_gesture_min_dist">30dp</dimen>
 
     <!-- Minimum fraction of the display a gesture must travel, at any velocity, to qualify as a
          collapse request -->
-    <item type="dimen" name="collapse_min_display_fraction">10%</item>
+    <item type="dimen" name="collapse_min_display_fraction">15%</item>
     <!-- Minimum fraction of the display a gesture must travel to qualify as an expand request -->
     <item type="dimen" name="expand_min_display_fraction">50%</item>
 
     <!-- Initial acceleration of an expand animation after fling -->
-    <dimen name="expand_accel">2000dp</dimen>
+    <dimen name="expand_accel">2500dp</dimen>
     <!-- Initial acceleration of an collapse animation after fling -->
-    <dimen name="collapse_accel">2000dp</dimen>
+    <dimen name="collapse_accel">2500dp</dimen>
 
     <!-- The padding on the global screenshot background image -->
     <dimen name="global_screenshot_bg_padding">20dp</dimen>
diff --git a/frameworks/base/services/java/com/android/server/wm/WindowManagerService.java b/frameworks/base/services/java/com/android/server/wm/WindowManagerService.java
index 632fb2c..4548404 100644
--- a/frameworks/base/services/java/com/android/server/wm/WindowManagerService.java
+++ b/frameworks/base/services/java/com/android/server/wm/WindowManagerService.java
@@ -561,9 +561,9 @@ public class WindowManagerService extends IWindowManager.Stub
 
     PowerManagerService mPowerManager;
 
-    float mWindowAnimationScale = 0.75f;
-    float mTransitionAnimationScale = 0.75f;
-    float mAnimatorDurationScale = 0.75f;
+    float mWindowAnimationScale = 0.3f;
+    float mTransitionAnimationScale = 0.3f;
+    float mAnimatorDurationScale = 0.3f;
 
     final InputManagerService mInputManager;
     final DisplayManagerService mDisplayManagerService;
