
project frameworks/base/
diff --git a/frameworks/base/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java b/frameworks/base/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
index 62cdb8a..9320995 100644
--- a/frameworks/base/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
+++ b/frameworks/base/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
@@ -2604,10 +2604,14 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             }
         }
 
-        if (keyCode == KeyEvent.KEYCODE_BACK && !down) {
+        if (keyCode == KeyEvent.KEYCODE_BACK) {
+		    if (down && repeatCount == 0) {
+                performHapticFeedbackLw(null, HapticFeedbackConstants.KEYBOARD_TAP, false);
+            }
+            else if (!down) {
             mHandler.removeCallbacks(mBackLongPress);
         }
-
+    }
         // First we always handle the home key here, so applications
         // can never break it, although if keyguard is on, we do let
         // it handle it, because that gives us the correct 5 second
@@ -2691,6 +2695,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
 
             // Remember that home is pressed and handle special actions.
             if (repeatCount == 0) {
+		performHapticFeedbackLw(null, HapticFeedbackConstants.KEYBOARD_TAP, false);
                 mHomePressed = true;
                 if (mHomeDoubleTapPending) {
                     mHomeDoubleTapPending = false;
@@ -2732,6 +2737,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                     preloadRecentApps();
                 }
                 if (repeatCount == 0) {
+		    performHapticFeedbackLw(null, HapticFeedbackConstants.KEYBOARD_TAP, false);
                     mMenuPressed = true;
                     if (mEnableShiftMenuBugReports && (metaState & chordBug) == chordBug) {
                         Intent intent = new Intent(Intent.ACTION_BUG_REPORT);
